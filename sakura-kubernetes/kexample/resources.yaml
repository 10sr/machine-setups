---
apiVersion: v1
kind: Service
metadata:
  name: nginx-nodeport
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      nodePort: 30081


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc01
spec:
  selector:
    matchLabels:
      type: nfs
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteMany

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          args: [ "sh", "/configmap_volume/nginx_cmd.sh" ]
          env:
            - name: VOLUME_MOUNT_PATH
              value: /configmap_volume
          ports:
            - containerPort: 80
          volumeMounts:
            - name: configmap-from-file-content-volume
              mountPath: /configmap_volume
            - name: nfs-pvc01-volume
              mountPath: /nfs-pvc-volume
      volumes:
        - name: configmap-from-file-content-volume
          configMap:
            name: configmap-from-file-content
        - name: nfs-pvc01-volume
          persistentVolumeClaim:
            claimName: nfs-pvc01

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx2-deployment
  labels:
    app: nginx2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx2
  template:
    metadata:
      labels:
        app: nginx2
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nfs-pvc01-volume
              mountPath: /nfs-pvc-volume
      volumes:
        - name: nfs-pvc01-volume
          persistentVolumeClaim:
            claimName: nfs-pvc01
