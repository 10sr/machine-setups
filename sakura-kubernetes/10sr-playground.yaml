---
apiVersion: v1
kind: Namespace
metadata:
  name: 10sr-playground
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc01
  namespace: 10sr-playground
spec:
  selector:
    matchLabels:
      type: nfs
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteMany

---
apiVersion: v1
kind: Service
metadata:
  name: webtools-nodeport
  namespace: 10sr-playground
spec:
  type: NodePort
  selector:
    app: webtools
  ports:
    - protocol: TCP
      port: 7700
      nodePort: 30077
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-nodeport
  namespace: 10sr-playground
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      nodePort: 30080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webtools-deployment
  namespace: 10sr-playground
  labels:
    app: webtools
spec:
  replicas: 2
  selector:
    matchLabels:
      app: webtools
  template:
    metadata:
      labels:
        app: webtools
    spec:
      containers:
        - name: webtools
          image: quay.io/10sr/webtools:v0.0.8
          ports:
            - containerPort: 7700
          env:
            - name: WEBTOOLS_SETTINGS_TOML
              value: ./settings_insecure.toml
          volumeMounts:
            - name: nfs-pvc01-volume
              mountPath: /nfs-pvc-volume
      volumes:
        - name: nfs-pvc01-volume
          persistentVolumeClaim:
            claimName: nfs-pvc01

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
  namespace: 10sr-playground
data:
  nginx_index_html: |
    nginx of k8s
    10sr-playground
  nginx_cmd_sh: |
    #!/bin/sh
    set -eux
    cp -pf /configmap_volume/nginx_index_html /usr/share/nginx/html/index.html
    echo `hostname` >>/usr/share/nginx/html/index.html
    exec nginx -g "daemon off;"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: 10sr-playground
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          command: [ "sh", "/configmap_volume/nginx_cmd_sh" ]
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-configmap-volume
              mountPath: /configmap_volume
            - name: nfs-pvc01-volume
              mountPath: /nfs-pvc-volume
      volumes:
        - name: nginx-configmap-volume
          configMap:
            name: nginx-configmap
        - name: nfs-pvc01-volume
          persistentVolumeClaim:
            claimName: nfs-pvc01
