---
- name: Setup sakura
  hosts: default
  vars:
    # Do not use these variables directly in roles!
    _ubuntu_codename: xenial
    _domain_name: 3ends.info
    # domain_name: "tk2-407-44672.vs.sakura.ne.jp"
    _revision_timestamp_file: /machine_setups_revision_timestamp.txt
    _this_revision_timestamp: "{{ lookup('env', 'THIS_REVISION_TIMESTAMP') | int }}"
    _revision_yaml: /machine_setups_revision.yaml
    _this_revision:
      id: "{{ lookup('env', 'THIS_REVISION_ID') }}"
      subject: "{{ lookup('env', 'THIS_REVISION_SUBJECT') }}"
      repository_url: https://github.com/10sr/machine_setups.git
      ansible_version: "{{ ansible_version.full }}"

  pre_tasks:
    - name: Include all vault variables
      include_vars:
        dir: ./vault/
        name: _vault
      no_log: yes

    - name: Set ansible_become_pass
      set_fact:
        ansible_become_pass: "{{ _vault.ansible_become_pass }}"
        cachable: yes
      no_log: yes

    - name: Load previous revision
      # Do nothing when the file does not exist
      shell: "! test -f {{ _revision_timestamp_file }} || cat {{ _revision_timestamp_file }}"
      register: _shell_previous_revision_timestamp
      changed_when: no

    - name: Check revision timestamp
      assert:
        that:
          - _this_revision_timestamp|int > 0
          - _shell_previous_revision_timestamp.stdout|int <= _this_revision_timestamp|int

    - name: Check codename
      assert:
        that:
          - _ubuntu_codename == ansible_lsb.codename
          - _ubuntu_codename == ansible_distribution_release

    - name: Install some prerequisite packages
      apt:
        name:
          - git
          - nginx
      become: yes

  roles:
    - role: timezone
      timezone_name: UTC
    # - role: hostname
    #   hostname: "{{ _domain_name }}"
    - role: locale
      locale_locales:
        - ja_JP.UTF-8 UTF-8

    - role: sosreport

    - role: letsencrypt
      letsencrypt_register_email: 8.slashes@gmail.com
      letsencrypt_domain_names:
        - "{{ _domain_name }}"
        - "b.{{ _domain_name }}"
        - "st.{{ _domain_name }}"
        - "minio.st.{{ _domain_name }}"
        - "nc.{{ _domain_name }}"
        - "px.{{ _domain_name }}"
        - "jk.{{ _domain_name }}"
        - "gg.{{ _domain_name }}"
      letsencrypt_webroot: /var/nginx/main
      letsencrypt_certname: "{{ _domain_name }}"
      letsencrypt_key_dir: /etc/letsencrypt/live/{{ _domain_name }}
      letsencrypt_ssl_key_dir: /etc/letsencrypt/live/{{ _domain_name }}
      letsencrypt_ssl_dhparam_path: /etc/ssl/private/dhparam.pem

    - role: nginx
      nginx_default_root: /var/nginx/main
      nginx_name_ssl_only:
        - "b.{{ _domain_name }}"
        - "nc.{{ _domain_name }}"
        - "gg.{{ _domain_name }}"
      nginx_host_proxies:
        - name: gl.{{ _domain_name }}
          port: 8800
      nginx_proxy_upstreams: []
      nginx_ssl_default_root: /var/nginx/main
      nginx_ssl_proxy_upstreams:
        - path: /10sr_bot
          port: 5000
        - path: /wiki
          port: 2500
          additional_directives:
            - "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for"
            - "proxy_set_header Host $host"
            - "proxy_set_header X-Forwarded-Proto $scheme"
            - "proxy_set_header X-Real-IP $remote_addr"
            # - "proxy_redirect default"
      nginx_ssl_host_proxies:
        - name: "b.{{ _domain_name }}"
          port: 2368
          additional_directives:
            - "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for"
            - "proxy_set_header Host $host"
            - "proxy_set_header X-Forwarded-Proto $scheme"
            - "proxy_set_header X-Real-IP $remote_addr"
        - name: "nc.{{ _domain_name }}"
          port: 8888
        - name: "px.{{ _domain_name }}"
          port: 32400
        - name: gg.{{ _domain_name }}
          port: 10080

    - role: docker
      docker_ubuntu_codename: "{{ _ubuntu_codename }}"
      docker_compose_path: ./docker-compose
      docker_compose_env:
        ghost0:
          NGINX_SERVER_NAME: "b.{{ _domain_name }}"
        instiki0:
          NGINX_SERVER_NAME: "{{ _domain_name }}"
        10sr_bot0:
          TWITTER_KEY: VmHRoeyCxmGisuGPCBADVfo6v
          TWITTER_SECRET: "{{ _vault.bot_twitter_secret }}"
          TWITTER_TOKEN: 2578716006-LhQWcRQyG5r0uC92yLwy1LYhNIPGMVXAy4CWOpt
          TWITTER_TOKEN_SECRET: "{{ _vault.bot_twitter_token_secret }}"
          POST_BEARER_TOKEN: "{{ _vault.bot_post_bearer_token }}"
        mastodon0:
          NGINX_SERVER_NAME: "st.{{ _domain_name }}"
          NGINX_S3_SERVER_NAME: "minio.st.{{ _domain_name }}"
          NGINX_SERVER_PORT: 3000
          NGINX_S3_SERVER_PORT: 9000
          PAPERCLIP_SECRET: "{{ _vault.mastodon_paperclip_secret }}"
          SECRET_KEY_BASE: "{{ _vault.mastodon_secret_key_base }}"
          OTP_SECRET: "{{ _vault.mastodon_otp_secret }}"
          SMTP_PASSWORD: "{{ _vault.postfix_smtp_password }}"
          AWS_ACCESS_KEY_ID: 66aa7319
          AWS_SECRET_ACCESS_KEY: "{{ _vault.mastodon_minio_secret_key }}"
          MINIO_ACCESS_KEY: 66aa7319
          MINIO_SECRET_KEY: "{{ _vault.mastodon_minio_secret_key }}"
          S3_HOSTNAME: minio.st.{{ _domain_name }}
          # CRON_JS_MAILTO: 8.slashes@gmail.com
          # CRON_JS_SMTP_HOST: smtp.mailgun.org
          # CRON_JS_SMTP_PORT: 587
          # CRON_JS_SMTP_USER: postmaster@m.3ends.info
          # CRON_JS_SMTP_PASS: "{{ postfix_smtp_password }}"
        nextcloud0:
          MYSQL_USER: nextcloud
          MYSQL_ROOT_PASSWORD: "{{ _vault.nextcloud_mysql_root_password }}"
          MYSQL_DATABASE: nextcloud
          MYSQL_PASSWORD: "{{ _vault.nextcloud_mysql_password }}"
          VIRTUAL_HOST: "nc.{{ _domain_name }}"
      docker_pm2:
        10sr_bot0:
          json: 10sr_bot0/pm2.json
          state: started
          command: docker-compose up --build
        ghost0:
          json: ghost0/pm2.json
          state: started
          command: docker-compose up --build
        instiki0:
          json: instiki0/pm2.json
          state: started
          command: docker-compose up --build
        mastodon0:
          json: mastodon0/pm2.json
          state: started
          command: sh ./up.sh
        nextcloud0:
          json: nextcloud0/pm2.json
          state: started
          command: docker-compose up --build
        plex0:
          json: plex0/pm2.json
          state: stopped
          command: docker-compose up --build
        gogs0:
          json: gogs0/pm2.json
          state: started
          command: docker-compose up --build

    - role: mastodon_nginx_proxy
      mastodon_server_name: st.{{ _domain_name }}
      mastodon_s3_server_name: minio.st.3ends.info
      mastodon_s3_port: 9000
      mastodon_web_port: 3000
      mastodon_stream_port: 4000
      # Remove later!
      mastodon_proxy_letsencrypt_access_dir: /.well-known/acme-challenge
      mastodon_proxy_letsencrypt_webroot: /var/nginx/main

    - role: postfix
      postfix_root_alias: 8.slashes@gmail.com

    - role: mackerel_agent
      mackerel_agent_apikey: "{{ _vault.mackerel_agent_apikey }}"

    - role: java_jre

    - role: jenkins
      jenkins_webuser_username: 10sr
      jenkins_webuser_password: "{{ _vault.jenkins_webuser_password }}"
      # TODO: This value is too big so separete into file
      jenkins_webuser_ssh_publickey:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCy90M0oZocY2AMrk8DUYNaHacamzOW+A+NNsXSTdLqj/k45pg6WiT8hnYBUXnVLJPoOQknFLFLKaC9YUX1iiz2aiH/aFn83W5og7NGlhkcFmti9tQwql7gB5/Y0N/DoRVWUXoi/Iy69LU7dMQQOAM9yvOwTl86djVOVpjhI/KPkPGpiddXjqruBcOpmymtfZJpFDqIskfBse7f+e0oYrYlZkTD8mxQyrjpacR0qvcRTJ6EE+bxqY8+ONA9hEahZ426au1mPni4L2DZrrG77gNwE2c4T/mMGrM7zw3MjZeZAtgHXwik0yw31eTHyJeDniDdEcFxL80nOJIk69YwcRM/ y_k@dw.local
        - ssh-dss AAAAB3NzaC1kc3MAAACBAPCPLZTNmb6QBrrERXD3gulK346Ik4SluA0YiXK//h4OSBEv22eAG9/prLviDxHVNYpViYLMFGGYAlbCl2m6O5bzN0BRKZVEaCug8WzSkYGUfFK4aXdWbJ1pzGZbWWp/kFOSTrv+oCz8BRvaEME2sC7boTWmhjV4PyJWMaoLOn4xAAAAFQDoyQ/E/PRdSAfmNcM+CM7iq9AReQAAAIEA6f8HI2HsrF2a9OC2m/RDAHDLC06hzLa4yMdWRsnyFIFtaccMpWA+z44H1pax4olQ20FS7RRuE6BLLYUUTTeFQ0NJiG+d+PPViozhV7tkpStcqGSBEULpWALCEB+CAmsGAPhQG+Niu/xHdl5RVPsyIiSNPn/LC6yGgNOJVy12b94AAACBAJqjG305JHNqFOA93+j+1lpYigJyL1YR5rQWTEFtM+ibCJgmykrk6LYfxCpi2ZzQAmWlph6ZFy9aSovdXfyIzQxA89LA46nmhHTCVLGZ9Xc2JgJeazQUMSAXPfIJ6Ru/6xuUjL9cmSv8AN8pDXQ49oNEMZETrNohCxLSx3fR37zM yuk@darwin-mba.local
        # Key of remote ansible normal user
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCgAL0Sasj/Z9SsNpfGib/kl4Y3ffaBDa9EIqONhBKqvbG2WxbP76r2LOrNQFZKM6VAjGd2raD24tT3kk/ZlA6JvjETFHIzPDyLMzqvnC9Q93qM8O2mHi7juVQXx0Oqs4M5Vvx+F3AlQFYDwOgjnxfTE2gEZadJabygOq5J7gQfxS5XaFc5nFFXpSrXOk0IAH4v3gKvLbVliLAhvkgebkjAv0m9ooxvX64/gNv50edB92KV8tfBpn5Oqm6hAyxa0r+XsBsC3612JKKHegIEnBaB/0PdMpWb6tbAg376tYu1AwSNUi5/lzJt6s8Fh1ZqdwO634B7eHeZN3mJojcwwnpV yuk@tk2-407-44672

      jenkins_serveruser_password: "{{ _vault.jenkins_serveruser_password }}"
      jenkins_serveruser_password_salt: "{{ ansible_mounts.0.uuid.replace('-', '')[:16] }}"

      jenkins_plugins:
        - ansicolor
        - job-dsl
        - authorize-project
        - simple-theme-plugin
        - slack

      # https://github.com/afonsof/jenkins-material-theme/
      jenkins_theme_css_url: https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-blue-grey.css

    - role: jenkins_bootstrap_job
      jenkins_bootstrap_job_name: jenkins-bootstrap-job
      jenkins_bootstrap_job_webuser_username: 10sr
      jenkins_bootstrap_job_webuser_password: "{{ _vault.jenkins_webuser_password }}"
      jenkins_bootstrap_job_repository_url: https://github.com/10sr/machine-setups.git
      jenkins_bootstrap_job_jobdsl_target: sakura/jenkins-jobs/src/jobs/*.groovy

    - role: jenkins_nginx_proxy
      jenkins_nginx_proxy_port: 8080
      jenkins_nginx_proxy_server_name: "jk.{{ _domain_name }}"

  post_tasks:
    - file:
        state: link
        src: /var/lib/data/docker/nextcloud0/html/data/10sr/files/www
        dest: /var/nginx/main/nc
      become: yes

    - name: Write timestamp file
      copy:
        content: "{{ _this_revision_timestamp }}"
        dest: "{{ _revision_timestamp_file }}"
      become: yes

    - name: Create last revision file
      copy:
        dest: "{{ _revision_yaml }}"
        content: "{{ _this_revision | to_nice_yaml }}"
      become: yes
