---
- hosts: default
  vars:
    # Do not use these variables directly in roles!
    ubuntu_codename: xenial
    domain_name: 3ends.info
    # domain_name: "tk2-407-44672.vs.sakura.ne.jp"
  vars_files:
    - ./vault/ansible_become_pass.yml
    - ./vault/bot_post_bearer_token.yml
    - ./vault/bot_twitter_secret.yml
    - ./vault/bot_twitter_token_secret.yml
    - ./vault/mastodon_minio_secret_key.yml
    - ./vault/mastodon_otp_secret.yml
    - ./vault/mastodon_paperclip_secret.yml
    - ./vault/mastodon_secret_key_base.yml
    - ./vault/postfix_smtp_password.yml
    - ./vault/mackerel_agent_apikey.yml
    - ./vault/nextcloud_mysql_password.yml
    - ./vault/nextcloud_mysql_root_password.yml

  pre_tasks:
    - name: Check codename
      assert:
        that:
          - ubuntu_codename == ansible_lsb.codename
          - ubuntu_codename == ansible_distribution_release

    - name: Install some prerequisite packages
      apt:
        name: "{{ item }}"
      with_items:
        - git
        - nginx
      become: yes

  roles:
    # - role: hostname
    #   hostname: "{{ domain_name }}"

    - role: letsencrypt
      letsencrypt_register_email: 8.slashes@gmail.com
      letsencrypt_domain_names:
        - "{{ domain_name }}"
        - "b.{{ domain_name }}"
        - "st.{{ domain_name }}"
        - "minio.st.{{ domain_name }}"
        - "nc.{{ domain_name }}"
      letsencrypt_webroot: /var/nginx/main
      letsencrypt_key_dir: /etc/letsencrypt/live/{{ domain_name }}
      letsencrypt_ssl_key_dir: /etc/letsencrypt/live/{{ domain_name }}
      letsencrypt_ssl_dhparam_path: /etc/ssl/private/dhparam.pem

    - role: nginx
      nginx_default_root: /var/nginx/main
      nginx_name_ssl_only:
        - "b.{{ domain_name }}"
        - "nc.{{ domain_name }}"
      nginx_ssl_default_root: /var/nginx/main
      nginx_ssl_proxy_upstreams:
        - path: /10sr_bot
          port: 5000
        - path: /wiki
          port: 2500
          additional_directives:
            - "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for"
            - "proxy_set_header Host $host"
            - "proxy_set_header X-Forwarded-Proto $scheme"
            - "proxy_set_header X-Real-IP $remote_addr"
            # - "proxy_redirect default"
      nginx_ssl_host_proxies:
        - name: "b.{{ domain_name }}"
          port: 2368
          additional_directives:
            - "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for"
            - "proxy_set_header Host $host"
            - "proxy_set_header X-Forwarded-Proto $scheme"
            - "proxy_set_header X-Real-IP $remote_addr"
        - name: "nc.{{ domain_name }}"
          port: 8888

    - role: docker
      docker_ubuntu_codename: "{{ ubuntu_codename }}"
      docker_compose_path: ./docker-compose
      docker_compose_env:
        ghost0:
          NGINX_SERVER_NAME: "b.{{ domain_name }}"
        instiki0:
          NGINX_SERVER_NAME: "{{ domain_name }}"
        10sr_bot0:
          TWITTER_KEY: VmHRoeyCxmGisuGPCBADVfo6v
          TWITTER_SECRET: "{{ bot_twitter_secret }}"
          TWITTER_TOKEN: 2578716006-LhQWcRQyG5r0uC92yLwy1LYhNIPGMVXAy4CWOpt
          TWITTER_TOKEN_SECRET: "{{ bot_twitter_token_secret }}"
          POST_BEARER_TOKEN: "{{ bot_post_bearer_token }}"
        mastodon0:
          NGINX_SERVER_NAME: "st.{{ domain_name }}"
          NGINX_S3_SERVER_NAME: "minio.st.{{ domain_name }}"
          NGINX_SERVER_PORT: 3000
          NGINX_S3_SERVER_PORT: 9000
          PAPERCLIP_SECRET: "{{ mastodon_paperclip_secret }}"
          SECRET_KEY_BASE: "{{ mastodon_secret_key_base }}"
          OTP_SECRET: "{{ mastodon_otp_secret }}"
          SMTP_PASSWORD: "{{ postfix_smtp_password }}"
          AWS_ACCESS_KEY_ID: 66aa7319
          AWS_SECRET_ACCESS_KEY: "{{ mastodon_minio_secret_key }}"
          MINIO_ACCESS_KEY: 66aa7319
          MINIO_SECRET_KEY: "{{ mastodon_minio_secret_key }}"
          S3_HOSTNAME: minio.st.{{ domain_name }}
          # CRON_JS_MAILTO: 8.slashes@gmail.com
          # CRON_JS_SMTP_HOST: smtp.mailgun.org
          # CRON_JS_SMTP_PORT: 587
          # CRON_JS_SMTP_USER: postmaster@m.3ends.info
          # CRON_JS_SMTP_PASS: "{{ postfix_smtp_password }}"
        nextcloud0:
          MYSQL_USER: nextcloud
          MYSQL_ROOT_PASSWORD: "{{ nextcloud_mysql_root_password }}"
          MYSQL_DATABASE: nextcloud
          MYSQL_PASSWORD: "{{ nextcloud_mysql_password }}"
          VIRTUAL_HOST: "nc.{{ domain_name }}"
      docker_pm2:
        10sr_bot0:
          json: 10sr_bot0/pm2.json
          state: started
          command: docker-compose up --build
        ghost0:
          json: ghost0/pm2.json
          state: started
          command: docker-compose up --build
        instiki0:
          json: instiki0/pm2.json
          state: started
          command: docker-compose up --build
        mastodon0:
          json: mastodon0/pm2.json
          state: started
          command: sh ./up.sh
        nextcloud0:
          json: nextcloud0/pm2.json
          state: started
          command: docker-compose up --build

    - role: mastodon_nginx_proxy
      mastodon_server_name: st.{{ domain_name }}
      mastodon_s3_server_name: minio.st.3ends.info
      mastodon_s3_port: 9000
      mastodon_web_port: 3000
      mastodon_stream_port: 4000
      # Remove later!
      mastodon_proxy_letsencrypt_access_dir: /.well-known/acme-challenge
      mastodon_proxy_letsencrypt_webroot: /var/nginx/main

    - role: postfix
      postfix_root_alias: 8.slashes@gmail.com

    - role: mackerel_agent
