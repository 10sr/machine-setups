---
- hosts: default
  vars:
    # Do not use these variables directly in roles!
    ubuntu_codename: trusty
    domain_name: 3ends.info
  vars_files:
    # - ./secret.yml
    - ./vault/ddns_f5_si_password.yml
    - ./vault/ansible_become_pass.yml
    - ./vault/gnusocial_mysql_password.yml
    - ./vault/gnusocial_mysql_root_password.yml
    - ./vault/icecast2_source_password.yml
    - ./vault/icecast2_admin_password.yml
    - ./vault/icecast2_relay_password.yml
    # - ./vault/minio_secret_key.yml
    - ./vault/mastodon_minio_secret_key.yml
    - ./vault/mastodon_otp_secret.yml
    - ./vault/mastodon_paperclip_secret.yml
    - ./vault/mastodon_secret_key_base.yml
    - ./vault/nextcloud_mysql_root_password.yml
    - ./vault/nextcloud_mysql_password.yml
    - ./vault/bot_twitter_secret.yml
    - ./vault/bot_twitter_token_secret.yml
    - ./vault/bot_post_bearer_token.yml
    - ./vault/mackerel_agent_apikey.yml
    - ./vault/postfix_smtp_password.yml
  roles:
    - role: hostname
      hostname: "{{ domain_name }}"

    # - role: cron
    #   cron_email_address: 8.slashes@gmail.com

    # - role: firewalld
    #   firewalld_port_states:
    #     - port: 22/tcp
    #       state: enabled
    #     - port: 80/tcp
    #       state: enabled
    #     - port: 443/tcp
    #       state: enabled
    #     - port: 3389/tcp
    #       state: enabled

    # - role: data_dir
    #   data_dir_dirs:
    #     - mountpoint: /data
    #       filepath: /data.fs
    #       size_mb: 15000

    #- apt-upgrade

    - role: ddns
      ddns_domain_name: 10sr.f5.si
      ddns_name: 10sr
      # Somehow recursive reference cannot be used in template
      # So append underscore
      ddns_f5_si_password_: "{{ ddns_f5_si_password }}"

    # TODO: Remove icecast2 specific configs
    - role: nginx
      nginx_main_server_names:
        - "{{ domain_name }}"
        - 10sr.f5.si
      nginx_main_root: /var/nginx/main
      nginx_letsencrypt_access_dir: /.well-known/acme-challenge
      nginx_letsencrypt_webroot: /var/nginx/main
      # not used yet
      nginx_proxy_upstreams: []
      nginx_host_proxies:
        - name: "ca.{{ domain_name }}"
          port: 8080

    - role: icecast2
      icecast2_server_name: ic.{{ domain_name }}
      icecast2_server_port: 3389
      icecast2_letsencrypt_access_dir: /.well-known/acme-challenge
      icecast2_letsencrypt_webroot: /var/nginx/main
      icecast2_liquidsoap_sources:
        - name: the_back_horn
          # playlist: "/var/icecast2/THE BACK HORN/all.m3u"
        - name: ring_all
          # playlist: /var/icecast2/ring/all.m3u
        - name: lovelive_all
          # playlist: /var/icecast2/lovelive/all.m3u
        - name: lovelive_best1
          # playlist: /var/icecast2/lovelive/lovelive_best1/all.m3u
        - name: lovelive_best2
          # playlist: /var/icecast2/lovelive/lovelive_best2/all.m3u
      icecase2_admin_password: "{{ icecast2_admin_password }}"
      icecase2_relay_password: "{{ icecast2_relay_password }}"
      icecase2_source_password: "{{ icecast2_source_password }}"

    - role: letsencrypt
      letsencrypt_domain_names:
        - "{{ domain_name }}"
        - ic.{{ domain_name }}
        - st.{{ domain_name }}
        - minio.st.{{ domain_name }}
        - scl.{{ domain_name }}
        - b.{{ domain_name }}
        - ca.{{ domain_name }}
        #- d.{{ domain_name }}
      letsencrypt_webroot: /var/nginx/main
      letsencrypt_key_dir: /etc/letsencrypt/live/{{ domain_name }}
      letsencrypt_ssl_key_dir: /etc/letsencrypt/live/{{ domain_name }}
      letsencrypt_ssl_dhparam_path: /etc/ssl/private/dhparam.pem

    - role: nginx_ssl
      nginx_ssl_main_server_name: "{{ domain_name }}"
      nginx_ssl_main_root: /var/nginx/main
      nginx_ssl_proxy_upstreams:
        - path: /minio
          port: 9000
        - path: /10sr_bot
          port: 5000
        - path: /nextcloud
          port: 8880
          additional_directives:
            - "add_header Strict-Transport-Security max-age=15552000 always"
            - "client_max_body_size 1024M"
            - "rewrite /nextcloud/(.*) /$1 break"
        - path: /zabbix
          port: 8008
        - path: /wiki
          port: 2500
        # - path: /containers
        #   port: 8080
      nginx_ssl_host_proxies:
        - name: "ic.{{ domain_name }}"
          port: 3389
        - name: "scl.{{ domain_name }}"
          port: 8765
          additional_directives:
            - "proxy_set_header Host $host"
            - "proxy_set_header X-Real-IP $remote_addr"
        - name: "b.{{ domain_name }}"
          port: 2368
          additional_directives:
            - "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for"
            - "proxy_set_header Host $host"
            - "proxy_set_header X-Forwarded-Proto $scheme"
            - "proxy_set_header X-Real-IP $remote_addr"
        - name: "ca.{{ domain_name }}"
          port: 8080
    # - role: icecast2_ssl
    #   icecast2_ssl_server_name: ic."{{ domain_name }}"
    #   icecast2_ssl_upstream_name: icecast2

    - role: supervisord

    # - role: wiki
    #   wiki_user: wiki
    #   wiki_path: /wiki
    #   wiki_port: 4567
    #   when: false

    - role: lxc
      lxc_user: "{{ ansible_user_id }}"
      lxc_user_dir: "{{ ansible_user_dir }}"
      lxc_virbr_name: lxcbr0
      lxc_nic_num: 10
      lxc_subuid_start: 100000
      lxc_subuid_range: 65536
      lxc_subgid_start: 100000
      lxc_subgid_range: 65536

    - role: docker
      docker_compose_path: ./docker-compose
      docker_compose_env:
        # minio:
        #   MINIO_ACCESS_KEY: "10srr"
        #   MINIO_SECRET_KEY: "{{ minio_secret_key }}"
        nextcloud:
          MYSQL_USER: nextcloud
          MYSQL_ROOT_PASSWORD: "{{ nextcloud_mysql_root_password }}"
          MYSQL_DATABASE: nextcloud
          MYSQL_PASSWORD: "{{ nextcloud_mysql_password }}"
        10sr_bot:
          TWITTER_KEY: VmHRoeyCxmGisuGPCBADVfo6v
          TWITTER_SECRET: "{{ bot_twitter_secret }}"
          TWITTER_TOKEN: 2578716006-LhQWcRQyG5r0uC92yLwy1LYhNIPGMVXAy4CWOpt
          TWITTER_TOKEN_SECRET: "{{ bot_twitter_token_secret }}"
          POST_BEARER_TOKEN: "{{ bot_post_bearer_token }}"
        icecast2:
          ICECAST2_ADMIN_PASSWORD: "{{ icecast2_admin_password }}"
          ICECAST2_RELAY_PASSWORD: "{{ icecast2_relay_password }}"
          ICECAST2_SOURCE_PASSWORD: "{{ icecast2_source_password }}"
          ICECAST2_SERVER_PORT: 3389
        mastodon:
          PAPERCLIP_SECRET: "{{ mastodon_paperclip_secret }}"
          SECRET_KEY_BASE: "{{ mastodon_secret_key_base }}"
          OTP_SECRET: "{{ mastodon_otp_secret }}"
          SMTP_PASSWORD: "{{ postfix_smtp_password }}"
          AWS_ACCESS_KEY_ID: 66aa7319
          AWS_SECRET_ACCESS_KEY: "{{ mastodon_minio_secret_key }}"
          MINIO_ACCESS_KEY: 66aa7319
          MINIO_SECRET_KEY: "{{ mastodon_minio_secret_key }}"
          S3_HOSTNAME: minio.st.3ends.info
          CRON_JS_MAILTO: 8.slashes@gmail.com
          CRON_JS_SMTP_HOST: smtp.mailgun.org
          CRON_JS_SMTP_PORT: 587
          CRON_JS_SMTP_USER: postmaster@m.3ends.info
          CRON_JS_SMTP_PASS: "{{ postfix_smtp_password }}"
        gnusocial:
          MYSQL_USER: social
          MYSQL_ROOT_PASSWORD: "{{ gnusocial_mysql_root_password }}"
          MYSQL_DATABASE: social
          MYSQL_PASSWORD: "{{ gnusocial_mysql_password }}"
      docker_compose_supervisord:
        nextcloud:
          path: nextcloud/
          command: docker-compose up --force-recreate
          autostart: "false"
        10sr_bot:
          path: 10sr_bot/
          command: docker-compose up --force-recreate --build
          autostart: "false"
        zabbix:
          path: zabbix/
          command: docker-compose up --force-recreate --build
          autostart: "true"
        icecast2:
          path: icecast2/
          command: docker-compose up --force-recreate --build
          autostart: "false"
        mastodon:
          path: mastodon/
          command: sh ./up.sh
          autostart: "true"
        gnusocial:
          path: gnusocial/
          command: docker-compose up --force-recreate --build
          autostart: "false"
        ghost:
          path: ghost/
          command: docker-compose up --force-recreate
          autostart: "false"
        instiki:
          path: instiki/
          command: docker-compose up --force-recreate --build
          autostart: "true"
        cadvisor:
          path: cadvisor/
          command: docker-compose up --force-recreate
          autostart: "false"
        fluentd:
          path: fluentd/
          command: docker-compose up --force-recreate --build
          autostart: "true"
      docker_pm2:
        10sr_bot:
          json: 10sr_bot/pm2.json
          state: started
          command: docker-compose up --build
        cadvisor:
          json: cadvisor/pm2.json
          state: started
          command: docker-compose up --force-recreate
        ghost:
          json: ghost/pm2.json
          state: started
          command: docker-compose up --force-recreate

    - role: mastodon_nginx_proxy
      mastodon_server_name: st.{{ domain_name }}
      mastodon_s3_server_name: minio.st.3ends.info
      mastodon_s3_port: 9000
      mastodon_web_port: 3000
      mastodon_stream_port: 4000
      mastodon_proxy_letsencrypt_access_dir: /.well-known/acme-challenge
      mastodon_proxy_letsencrypt_webroot: /var/nginx/main

    - role: zabbix-agent
      zabbix_agent_hostname: "{{ domain_name }}"
      zabbix_server_address: "192.168.100.100"

    - role: mackerel-agent

    - role: postfix
      postfix_myhostname: "{{ domain_name }}"
      postfix_myorigin: "m.{{ domain_name }}"
      postfix_smtp_hostname: smtp.mailgun.org
      postfix_smtp_port: 587
      postfix_smtp_login: postmaster@m.3ends.info
      postfix_smtp_password_: "{{ postfix_smtp_password }}"
